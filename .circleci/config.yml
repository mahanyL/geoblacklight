---
version: 2.1
jobs:
  build:
    working_directory: ~/geoblacklight
    parameters:
      ruby_version:
        type: string
        default: '2.5.7'
      solr_port:
        type: string
        default: '8983'
      rails_version:
        type: string
        default: '5.2.4.3'
    docker:
      - image: circleci/ruby:<< parameters.ruby_version >>-node-browsers
      - image: solr:7-alpine
        command: bin/solr -cloud -noprompt -f -p <<parameters.solr_port>>
    environment:
      GEM_HOME: /home/circleci/geoblacklight/vendor/bundle
      BUNDLE_PATH: /home/circleci/geoblacklight/vendor/bundle
      BUNDLE_JOBS: 4
      BUNDLE_RETRY: 3
      RAILS_ENV: test
      RACK_ENV: test
      RAILS_VERSION: <<parameters.rails_version>>
      COVERAGE: true
    parallelism: 4
    steps:
      - checkout
      # Restore bundle and internal test app from the cache
      - restore_cache:
          keys:
            - cachebust-2020-07-13-geoblacklight-bundle-{{ checksum "geoblacklight.gemspec" }}-{{ checksum "Gemfile" }}-<< parameters.ruby_version >>-<< parameters.rails_version >>
      # Install gems
      - run: bundle check || bundle install
      # Store bundle cache
      - save_cache:
          key: cachebust-2020-07-13-geoblacklight-bundle-{{ checksum "geoblacklight.gemspec" }}-{{ checksum "Gemfile" }}-<< parameters.ruby_version >>-<< parameters.rails_version >>
          paths:
            - /home/circleci/geoblacklight/vendor/bundle
        # Restore internal test app from the cache
      - restore_cache:
          keys:
            - cachebust-2020-07-13-geoblacklight-internal-test-app-{{ checksum "geoblacklight.gemspec" }}-{{ checksum "Gemfile" }}-{{ checksum "spec/test_app_templates/Gemfile.extra" }}-<< parameters.ruby_version >>-<< parameters.rails_version >>
      # Generate the internal test app
      - run:
          name: Generate test app
          command: |
            [ -e ./.internal_test_app ] || bundle exec rake engine_cart:generate
      - save_cache:
          name: Save test app cache
          key: cachebust-2020-07-13-geoblacklight-internal-test-app-{{ checksum "geoblacklight.gemspec" }}-{{ checksum "Gemfile" }}-{{ checksum "spec/test_app_templates/Gemfile.extra" }}-<< parameters.ruby_version >>-<< parameters.rails_version >>
          paths:
            - ./.internal_test_app
      - run:
          name: Wait for Solr
          command: dockerize -wait tcp://localhost:<<parameters.solr_port>> -timeout 1m
      - run:
          name: Load config into solr
          command: |
            cd .internal_test_app/solr/conf
            zip -1 -r solr_config.zip ./*
            curl -H "Content-type:application/octet-stream" --data-binary @solr_config.zip "http://localhost:8983/solr/admin/configs?action=UPLOAD&name=solrconfig"
            curl -H 'Content-type: application/json' http://localhost:<<parameters.solr_port>>/api/collections/ -d '{create: {name: blacklight-core, config: solrconfig, numShards: 1}}'
      - run:
          name: Seed Solr
          command: |
            cd .internal_test_app
            bundle check || bundle install
            bundle exec rake geoblacklight:index:seed
            bundle exec rake geoblacklight:downloads:mkdir
      - run:
          name: Compile the assets for Webpack
          command: |
            cd .internal_test_app
            rm config/webpacker.yml
            bundle exec rails webpacker:install
            bundle exec rails webpacker:compile
      - run:
          name: Run the RSpec test suites
          command: bundle exec rspec $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      - run:
          name: Run the Teaspoon test suites
          command: bundle exec rake teaspoon

  rubocop:
    working_directory: ~/geoblacklight
    parameters:
      ruby_version:
        type: string
        default: '2.5.7'
      rails_version:
        type: string
        default: '5.2.4.3'
    docker:
      - image: circleci/ruby:<< parameters.ruby_version >>-node-browsers
    environment:
      GEM_HOME: /home/circleci/geoblacklight/vendor/bundle
      BUNDLE_PATH: /home/circleci/geoblacklight/vendor/bundle
      BUNDLE_JOBS: 4
      BUNDLE_RETRY: 3
      RAILS_ENV: test
      RACK_ENV: test
      RAILS_VERSION: <<parameters.rails_version>>
    steps:
      - checkout
      # Restore bundle cache
      - restore_cache:
          keys:
            - cachebust-2020-07-13-geoblacklight-bundle-{{ checksum "geoblacklight.gemspec" }}-{{ checksum "Gemfile" }}-<< parameters.ruby_version >>-<< parameters.rails_version >>
          paths:
            - /home/circleci/geoblacklight/vendor/bundle
      # Install gems and run rubocop
      - run: bundle check || bundle install
      - run: bundle exec rake rubocop

workflows:
  version: 2
  build:
    jobs:
      - build:
          ruby_version: 2.6.5
          rails_version: 5.2.4.3
          name: "ruby2-6_rails5-2"
      - build:
          ruby_version: 2.5.7
          rails_version: 5.2.4.3
          name: "ruby2-5_rails5-2"
      - rubocop:
          ruby_version: 2.6.5
          rails_version: 5.2.4.3
          name: "rubocop_ruby2-6_rails5-2"
      - rubocop:
          ruby_version: 2.5.7
          rails_version: 5.2.4.3
          name: "rubocop_ruby2-5_rails5-2"

  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build:
          ruby_version: 2.6.5
          rails_version: 5.2.4.3
          name: "ruby2-6_rails5-2"
      - build:
          ruby_version: 2.5.7
          rails_version: 5.2.4.3
          name: "ruby2-5_rails5-2"
      - rubocop:
          ruby_version: 2.6.5
          rails_version: 5.2.4.3
          name: "rubocop_ruby2-6_rails5-2"
      - rubocop:
          ruby_version: 2.5.7
          rails_version: 5.2.4.3
          name: "rubocop_ruby2-5_rails5-2"
